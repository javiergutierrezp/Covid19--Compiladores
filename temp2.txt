j[offset de 0] == 1 = int
0
0 - Quad(GOTO, principal, None, None)
1 - Quad(==, j[offset de 0], 1, ti0)
2 - Quad(GOTOF, ti0, None, None)
j[offset de 0] == 2 = int
1
0 - Quad(GOTO, principal, None, None)
1 - Quad(==, j[offset de 0], 1, ti0)
2 - Quad(GOTOF, ti0, None, 5)
3 - Quad(REGRESA, fib, None, 0)
4 - Quad(GOTO, None, None, 5)
5 - Quad(==, j[offset de 0], 2, ti1)
6 - Quad(GOTOF, ti1, None, None)
j[offset de 0] - 1 = int
fib(j-1)
0 - Quad(GOTO, principal, None, None)
1 - Quad(==, j[offset de 0], 1, ti0)
2 - Quad(GOTOF, ti0, None, 5)
3 - Quad(REGRESA, fib, None, 0)
4 - Quad(GOTO, None, None, 5)
5 - Quad(==, j[offset de 0], 2, ti1)
6 - Quad(GOTOF, ti1, None, 9)
7 - Quad(REGRESA, fib, None, 1)
8 - Quad(GOTO, None, None, 9)
9 - Quad(ERA, fib, None, None)
10 - Quad(-, j[offset de 0], 1, ti2)
11 - Quad(PARAM, ti2, None, tiparam1)
12 - Quad(GOSUB, fib, None, None)
13 - Quad(=, fib, None, 0)
***BEFORE***
{'j': Variable(j, int, {}, j), 'k': Variable(k, int, {}, k)}
***AFTER***
VarCount(2, 0, 0, 0, 0)
j[offset de 0] * 2 = int
p[offset de 0] - ti0 = int
ti1 + j[offset de 0] = int
j[offset de 0] + ti2 = int
j[offset de 0] == 1 = int
j
0 - Quad(GOTO, principal, None, None)
1 - Quad(==, j[offset de 0], 1, ti0)
2 - Quad(GOTOF, ti0, None, 5)
3 - Quad(REGRESA, fib, None, 0)
4 - Quad(GOTO, None, None, 5)
5 - Quad(==, j[offset de 0], 2, ti1)
6 - Quad(GOTOF, ti1, None, 9)
7 - Quad(REGRESA, fib, None, 1)
8 - Quad(GOTO, None, None, 9)
9 - Quad(ERA, fib, None, None)
10 - Quad(-, j[offset de 0], 1, ti2)
11 - Quad(PARAM, ti2, None, tiparam1)
12 - Quad(GOSUB, fib, None, None)
13 - Quad(=, fib, None, 0)
14 - Quad(REGRESA, fib, None, 0)
15 - Quad(ENDFUNC, None, None, None)
16 - Quad(=, 2, None, p[offset de 0])
17 - Quad(*, j[offset de 0], 2, ti0)
18 - Quad(-, p[offset de 0], ti0, ti1)
19 - Quad(+, ti1, j[offset de 0], ti2)
20 - Quad(+, j[offset de 0], ti2, ti3)
21 - Quad(=, ti3, None, i[offset de 0])
22 - Quad(==, j[offset de 0], 1, ti4)
23 - Quad(GOTOF, ti4, None, None)
7 * 4 = int
7*4
0 - Quad(GOTO, principal, None, None)
1 - Quad(==, j[offset de 0], 1, ti0)
2 - Quad(GOTOF, ti0, None, 5)
3 - Quad(REGRESA, fib, None, 0)
4 - Quad(GOTO, None, None, 5)
5 - Quad(==, j[offset de 0], 2, ti1)
6 - Quad(GOTOF, ti1, None, 9)
7 - Quad(REGRESA, fib, None, 1)
8 - Quad(GOTO, None, None, 9)
9 - Quad(ERA, fib, None, None)
10 - Quad(-, j[offset de 0], 1, ti2)
11 - Quad(PARAM, ti2, None, tiparam1)
12 - Quad(GOSUB, fib, None, None)
13 - Quad(=, fib, None, 0)
14 - Quad(REGRESA, fib, None, 0)
15 - Quad(ENDFUNC, None, None, None)
16 - Quad(=, 2, None, p[offset de 0])
17 - Quad(*, j[offset de 0], 2, ti0)
18 - Quad(-, p[offset de 0], ti0, ti1)
19 - Quad(+, ti1, j[offset de 0], ti2)
20 - Quad(+, j[offset de 0], ti2, ti3)
21 - Quad(=, ti3, None, i[offset de 0])
22 - Quad(==, j[offset de 0], 1, ti4)
23 - Quad(GOTOF, ti4, None, 26)
24 - Quad(REGRESA, fact, None, j[offset de 0])
25 - Quad(GOTO, None, None, None)
26 - Quad(*, 7, 4, ti5)
***BEFORE***
{'j': Variable(j, int, {}, j), 'k': Variable(k, int, {}, k)}
***AFTER***
VarCount(2, 0, 0, 0, 0)
x[offset de 0] < 11 = int
y[offset de 0] * z[offset de 0] = int
x[offset de 0] + 1 = int
***BEFORE***
{'y': Variable(y, int, {}, y), 'x': Variable(x, int, {}, x), 'valor': Variable(valor, int, {}, valor)}
***AFTER***
VarCount(3, 0, 0, 0, 0)
p[offset de 0] * 2 = int
p[offset de 0] * j[offset de 0] = int
ti2 - 5 = int
9 == i[offset de 0] = int
10 == k[offset de 0] = int
w[offset de 0] >= 0 = int
w[offset de 0] + 2 = int
1 * valor[offset de 0] = int
w[offset de 0] - 1 = int
{'principal': Function(principal, None, [], 46, None, {'i': Variable(i, int, {}, i), 'j': Variable(j, int, {}, j), 'p': Variable(p, int, {}, p), 'w': Variable(w, int, {}, w), 'maxVariables': Variable(maxVariables, int, {}, maxVariables), 'maxRenglones': Variable(maxRenglones, int, {}, maxRenglones), 'z': Variable(z, int, {}, z), 'valor': Variable(valor, int, {}, valor), 'DatosCovid': Variable(DatosCovid, Dataframe, {}, DatosCovid), 'k': Variable(k, int, {}, k), 'fib': Variable(fib, int, {}, 0), 'fact': Variable(fact, int, {}, 1)}), 'fib': Function(fib, int, [Variable(j, int, {}, None)], 1, VarCount(6, 0, 0, 0, 0), {}), 'fact': Function(fact, int, [Variable(j, int, {}, None)], 16, VarCount(8, 0, 0, 0, 0), {}), 'inicial': Function(inicial, None, [Variable(y, int, {}, None)], 29, VarCount(7, 0, 0, 2, 0), {})}
{'global': {'int': CompilationMemorySegment(0, 1800, 2), 'float': CompilationMemorySegment(1800, 1800, 0), 'char': CompilationMemorySegment(3600, 600, 0), 'string': CompilationMemorySegment(4200, 600, 0), 'Dataframe': CompilationMemorySegment(4800, 1200, 0)}, 'temporary': {'int': CompilationMemorySegment(6000, 3000, 0), 'float': CompilationMemorySegment(9000, 3000, 0), 'char': CompilationMemorySegment(12000, 1000, 0), 'string': CompilationMemorySegment(13000, 1000, 0), 'Dataframe': CompilationMemorySegment(14000, 2000, 0)}, 'local': {'int': CompilationMemorySegment(16000, 2700, 0), 'float': CompilationMemorySegment(18700, 2700, 0), 'char': CompilationMemorySegment(21400, 900, 0), 'string': CompilationMemorySegment(22300, 900, 0), 'Dataframe': CompilationMemorySegment(23200, 1800, 0)}, 'cte': {'int': CompilationMemorySegment(25000, 1800, 0), 'float': CompilationMemorySegment(26800, 1800, 0), 'char': CompilationMemorySegment(28600, 600, 0), 'string': CompilationMemorySegment(29200, 600, 0), 'Dataframe': CompilationMemorySegment(29800, 1200, 0)}}
0 - Quad(GOTO, principal, None, None)
1 - Quad(==, j[offset de 0], 1, ti0)
2 - Quad(GOTOF, ti0, None, 5)
3 - Quad(REGRESA, fib, None, 0)
4 - Quad(GOTO, None, None, 5)
5 - Quad(==, j[offset de 0], 2, ti1)
6 - Quad(GOTOF, ti1, None, 9)
7 - Quad(REGRESA, fib, None, 1)
8 - Quad(GOTO, None, None, 9)
9 - Quad(ERA, fib, None, None)
10 - Quad(-, j[offset de 0], 1, ti2)
11 - Quad(PARAM, ti2, None, tiparam1)
12 - Quad(GOSUB, fib, None, None)
13 - Quad(=, fib, None, 0)
14 - Quad(REGRESA, fib, None, 0)
15 - Quad(ENDFUNC, None, None, None)
16 - Quad(=, 2, None, p[offset de 0])
17 - Quad(*, j[offset de 0], 2, ti0)
18 - Quad(-, p[offset de 0], ti0, ti1)
19 - Quad(+, ti1, j[offset de 0], ti2)
20 - Quad(+, j[offset de 0], ti2, ti3)
21 - Quad(=, ti3, None, i[offset de 0])
22 - Quad(==, j[offset de 0], 1, ti4)
23 - Quad(GOTOF, ti4, None, 26)
24 - Quad(REGRESA, fact, None, j[offset de 0])
25 - Quad(GOTO, None, None, 28)
26 - Quad(*, 7, 4, ti5)
27 - Quad(REGRESA, fact, None, ti5)
28 - Quad(ENDFUNC, None, None, None)
29 - Quad(=, 0, None, x[offset de 0])
30 - Quad(=, 22, None, z[offset de 0])
31 - Quad(<, x[offset de 0], 11, ti0)
32 - Quad(GOTOF, ti0, None, 38)
33 - Quad(*, y[offset de 0], z[offset de 0], ti1)
34 - Quad(=, ti1, None, i[offset de 0])
35 - Quad(+, x[offset de 0], 1, ti2)
36 - Quad(=, ti2, None, x[offset de 0])
37 - Quad(GOTO, None, None, 31)
38 - Quad(ERA, fact, None, None)
39 - Quad(PARAM, 2, None, tiparam1)
40 - Quad(GOSUB, fact, None, None)
41 - Quad(=, fact, None, 1)
42 - Quad(=, 1, None, valor[offset de 0])
43 - Quad(ESCRIBE, "Media para la tabla de variables", None, tsNone)
44 - Quad(ESCRIBE, valor, None, tsNone)
45 - Quad(ENDFUNC, None, None, None)
46 - Quad(=, 5, None, k[offset de 0])
47 - Quad(LEE, p, None, tiNone)
48 - Quad(ESCRIBE, p, None, tsNone)
49 - Quad(*, p[offset de 0], 2, ti1)
50 - Quad(=, ti1, None, j[offset de 0])
51 - Quad(ERA, inicial, None, None)
52 - Quad(*, p[offset de 0], j[offset de 0], ti2)
53 - Quad(-, ti2, 5, ti3)
54 - Quad(PARAM, ti3, None, tiparam1)
55 - Quad(GOSUB, inicial, None, None)
56 - Quad(=, 0, None, i[offset de 0])
57 - Quad(==, 9, i[offset de 0], ti5)
58 - Quad(GOTOV, ti5, None, 62)
59 - Quad(ESCRIBE, i, None, tsNone)
60 - Quad(+, i[offset de 0], 1, tii[offset de 0])
61 - Quad(GOTO, None, None, 57)
62 - Quad(=, 0, None, k[offset de 0])
63 - Quad(==, 10, k[offset de 0], ti7)
64 - Quad(GOTOV, ti7, None, 70)
65 - Quad(=, k[offset de 0], None, valor[offset de 0])
66 - Quad(ESCRIBE, "valor =", None, tsNone)
67 - Quad(ESCRIBE, valor, None, tsNone)
68 - Quad(+, k[offset de 0], 1, tik[offset de 0])
69 - Quad(GOTO, None, None, 63)
70 - Quad(ESCRIBE, "indice de correlacion entre Variable 1 y Variable 5 de la muestra", None, tsNone)
71 - Quad(ESCRIBE, "dimelooou", None, tsNone)
72 - Quad(=, 6, None, w[offset de 0])
73 - Quad(>=, w[offset de 0], 0, ti9)
74 - Quad(GOTOF, ti9, None, 87)
75 - Quad(ESCRIBE, "resultado #", None, tsNone)
76 - Quad(ESCRIBE, w, None, tsNone)
77 - Quad(ERA, fact, None, None)
78 - Quad(+, w[offset de 0], 2, ti10)
79 - Quad(PARAM, ti10, None, tiparam1)
80 - Quad(GOSUB, fact, None, None)
81 - Quad(=, fact, None, 1)
82 - Quad(*, 1, valor[offset de 0], ti12)
83 - Quad(ESCRIBE, ti12, None, tsNone)
84 - Quad(-, w[offset de 0], 1, ti13)
85 - Quad(=, ti13, None, w[offset de 0])
86 - Quad(GOTO, None, None, 73)
